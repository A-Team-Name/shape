<?xml version="1.0" encoding="UTF-8"?>
<ttFont ttLibVersion="4.55">
  <glyf>
    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->
    <TTGlyph name="Scommaaccent" xMin="99" yMin="-224" xMax="500" yMax="675">
      <contour>
        <pt x="259" y="0" on="1"/>
        <pt x="216" y="0" on="0"/>
        <pt x="179" y="18" on="1"/>
        <pt x="99" y="50" on="0"/>
        <pt x="99" y="96" on="1"/>
        <pt x="99" y="114" on="0"/>
        <pt x="126" y="141" on="0"/>
        <pt x="144" y="141" on="1"/>
        <pt x="141" y="141" on="0"/>
        <pt x="241" y="79" on="0"/>
        <pt x="291" y="79" on="1"/>
        <pt x="342" y="79" on="0"/>
        <pt x="376" y="105" on="1"/>
        <pt x="414" y="134" on="0"/>
        <pt x="414" y="184" on="1"/>
        <pt x="414" y="240" on="0"/>
        <pt x="337" y="278" on="1"/>
        <pt x="302" y="295" on="0"/>
        <pt x="230" y="328" on="0"/>
        <pt x="194" y="345" on="1"/>
        <pt x="117" y="398" on="0"/>
        <pt x="117" y="490" on="1"/>
        <pt x="117" y="564" on="0"/>
        <pt x="162" y="618" on="1"/>
        <pt x="210" y="675" on="0"/>
        <pt x="283" y="675" on="1"/>
        <pt x="340" y="675" on="0"/>
        <pt x="387" y="657" on="1"/>
        <pt x="449" y="633" on="0"/>
        <pt x="449" y="585" on="1"/>
        <pt x="449" y="563" on="0"/>
        <pt x="432" y="548" on="1"/>
        <pt x="427" y="546" on="0"/>
        <pt x="424" y="545" on="1"/>
        <pt x="421" y="545" on="1"/>
        <pt x="416" y="545" on="0"/>
        <pt x="336" y="589" on="0"/>
        <pt x="297" y="589" on="1"/>
        <pt x="259" y="589" on="0"/>
        <pt x="207" y="541" on="0"/>
        <pt x="207" y="504" on="1"/>
        <pt x="207" y="429" on="0"/>
        <pt x="283" y="392" on="1"/>
        <pt x="318" y="376" on="0"/>
        <pt x="389" y="346" on="0"/>
        <pt x="424" y="331" on="1"/>
        <pt x="500" y="283" on="0"/>
        <pt x="500" y="183" on="1"/>
        <pt x="500" y="94" on="0"/>
        <pt x="443" y="42" on="1"/>
        <pt x="396" y="0" on="0"/>
        <pt x="355" y="0" on="1"/>
        <pt x="348" y="0" on="1"/>
        <pt x="332" y="-61" on="1"/>
        <pt x="374" y="-73" on="0"/>
        <pt x="374" y="-127" on="1"/>
        <pt x="374" y="-147" on="0"/>
        <pt x="359" y="-180" on="0"/>
        <pt x="344" y="-194" on="0"/>
        <pt x="301" y="-221" on="0"/>
        <pt x="282" y="-223" on="1"/>
        <pt x="251" y="-224" on="0"/>
        <pt x="167" y="-214" on="0"/>
        <pt x="167" y="-189" on="1"/>
        <pt x="167" y="-175" on="0"/>
        <pt x="185" y="-148" on="0"/>
        <pt x="199" y="-148" on="1"/>
        <pt x="205" y="-148" on="0"/>
        <pt x="251" y="-157" on="0"/>
        <pt x="283" y="-146" on="0"/>
        <pt x="290" y="-127" on="1"/>
        <pt x="291" y="-102" on="0"/>
        <pt x="270" y="-68" on="0"/>
        <pt x="244" y="-62" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 3 values pushed */
          0 1 0
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          51
          SHP[1]	/* ShiftPointByLastPoint */
          PUSHB[ ]	/* 2 values pushed */
          10 6
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          25 3 0
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          37 4
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          37 25 10
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          64 37 34 9
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          60
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 2 values pushed */
          66 5
          MIRP[01001]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          74
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          21
          MDRP[10110]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 2 values pushed */
          40 11
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 3 values pushed */
          21 70 16
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          55 9
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          70 55 10
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          64 70 4 9
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 3 values pushed */
          70 14 16
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          47 9
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          75
          MDRP[10110]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          54
          SMD[ ]	/* SetMinimumDistance */
          PUSHW[ ]	/* 3 values pushed */
          -6951 -14836 21
          CALL[ ]	/* CallFunction */
          SPVFS[ ]	/* SetPVectorFromStack */
          SFVTPV[ ]	/* SetFVectorToPVector */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          16
          MDRP[00000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 2 values pushed */
          42 6
          MIRP[11001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          45
          MDRP[00000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          19
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 4 values pushed */
          17 19 16 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          18 19 16 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 4 values pushed */
          43 42 45 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          44 42 45 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 3 values pushed */
          43 42 45
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SPVTL[0]	/* SetPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          44
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          17 19 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          18
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 8 values pushed */
          16 19 42 45 17 18 43 44
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 8 values pushed */
          16 19 42 45 17 18 43 44
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          64
          SMD[ ]	/* SetMinimumDistance */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 2 values pushed */
          40 21
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          PUSHB[ ]	/* 4 values pushed */
          8 7 63 66
          DEPTH[ ]	/* GetDepthStack */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          70
          SRP1[ ]	/* SetRefPoint1 */
          PUSHB[ ]	/* 4 values pushed */
          0 25 68 73
          DEPTH[ ]	/* GetDepthStack */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          55
          SRP2[ ]	/* SetRefPoint2 */
          PUSHB[ ]	/* 4 values pushed */
          10 37 52 53
          DEPTH[ ]	/* GetDepthStack */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          47 14
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          PUSHB[ ]	/* 1 value pushed */
          29
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 2 values pushed */
          66 60
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          PUSHB[ ]	/* 2 values pushed */
          63 68
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          0
          SRP1[ ]	/* SetRefPoint1 */
          PUSHB[ ]	/* 2 values pushed */
          55 70
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 2 values pushed */
          37 10
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          PUSHB[ ]	/* 6 values pushed */
          4 7 21 29 33 47
          DEPTH[ ]	/* GetDepthStack */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>
  </glyf>
</ttFont>
