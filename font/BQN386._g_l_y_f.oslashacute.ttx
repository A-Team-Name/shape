<?xml version="1.0" encoding="UTF-8"?>
<ttFont ttLibVersion="4.55">
  <glyf>
    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->
    <TTGlyph name="oslashacute" xMin="72" yMin="-55" xMax="528" yMax="740">
      <contour>
        <pt x="191" y="572" on="1"/>
        <pt x="191" y="586" on="0"/>
        <pt x="351" y="740" on="0"/>
        <pt x="367" y="740" on="1"/>
        <pt x="384" y="740" on="0"/>
        <pt x="412" y="710" on="0"/>
        <pt x="412" y="693" on="1"/>
        <pt x="412" y="680" on="0"/>
        <pt x="402" y="670" on="1"/>
        <pt x="388" y="655" on="0"/>
        <pt x="346" y="616" on="0"/>
        <pt x="320" y="591" on="1"/>
        <pt x="250" y="526" on="0"/>
        <pt x="237" y="526" on="1"/>
        <pt x="220" y="526" on="0"/>
        <pt x="191" y="556" on="0"/>
      </contour>
      <contour>
        <pt x="528" y="234" on="1"/>
        <pt x="528" y="119" on="0"/>
        <pt x="470" y="55" on="1"/>
        <pt x="410" y="-11" on="0"/>
        <pt x="297" y="-11" on="1"/>
        <pt x="250" y="-11" on="0"/>
        <pt x="211" y="1" on="1"/>
        <pt x="206" y="-7" on="0"/>
        <pt x="195" y="-25" on="0"/>
        <pt x="190" y="-34" on="1"/>
        <pt x="175" y="-55" on="0"/>
        <pt x="157" y="-55" on="1"/>
        <pt x="141" y="-55" on="0"/>
        <pt x="114" y="-30" on="0"/>
        <pt x="114" y="-14" on="1"/>
        <pt x="114" y="-6" on="0"/>
        <pt x="143" y="43" on="1"/>
        <pt x="72" y="109" on="0"/>
        <pt x="72" y="237" on="1"/>
        <pt x="72" y="347" on="0"/>
        <pt x="128" y="414" on="1"/>
        <pt x="188" y="484" on="0"/>
        <pt x="297" y="484" on="1"/>
        <pt x="352" y="484" on="0"/>
        <pt x="394" y="468" on="1"/>
        <pt x="415" y="504" on="1"/>
        <pt x="431" y="526" on="0"/>
        <pt x="448" y="526" on="1"/>
        <pt x="464" y="526" on="0"/>
        <pt x="490" y="501" on="0"/>
        <pt x="490" y="485" on="1"/>
        <pt x="490" y="476" on="0"/>
        <pt x="461" y="426" on="1"/>
        <pt x="528" y="360" on="0"/>
      </contour>
      <contour>
        <pt x="436" y="233" on="1"/>
        <pt x="436" y="292" on="0"/>
        <pt x="408" y="333" on="1"/>
        <pt x="262" y="88" on="1"/>
        <pt x="289" y="80" on="0"/>
        <pt x="314" y="80" on="1"/>
        <pt x="372" y="80" on="0"/>
        <pt x="406" y="129" on="1"/>
        <pt x="436" y="172" on="0"/>
      </contour>
      <contour>
        <pt x="345" y="385" on="1"/>
        <pt x="321" y="393" on="0"/>
        <pt x="296" y="393" on="1"/>
        <pt x="233" y="393" on="0"/>
        <pt x="196" y="345" on="1"/>
        <pt x="162" y="302" on="0"/>
        <pt x="162" y="237" on="1"/>
        <pt x="162" y="175" on="0"/>
        <pt x="196" y="134" on="1"/>
      </contour>
      <instructions>
        <assembly>
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 3 values pushed */
          20 1 0
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          55 7
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          20 55 10
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          64 20 27 9
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 3 values pushed */
          22 0 0
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 3 values pushed */
          30 0 0
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 3 values pushed */
          38 2 0
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          61 7
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 3 values pushed */
          38 61 10
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          64 38 43 9
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 3 values pushed */
          46 0 0
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 1 value pushed */
          68
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          34
          MDRP[10110]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 2 values pushed */
          65 11
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          65
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 3 values pushed */
          34 50 16
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          16 11
          MIRP[01001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          69
          MDRP[10110]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          54
          SMD[ ]	/* SetMinimumDistance */
          PUSHW[ ]	/* 3 values pushed */
          14111 -8326 21
          CALL[ ]	/* CallFunction */
          SPVFS[ ]	/* SetPVectorFromStack */
          SFVTPV[ ]	/* SetFVectorToPVector */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MDRP[00000]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 2 values pushed */
          25 6
          MIRP[11001]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          48
          MDRP[00000]	/* MoveDirectRelPt */
          SFVTCA[1]	/* SetFVectorToAxis */
          PUSHB[ ]	/* 4 values pushed */
          22 25 48 19
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          14116 -8316 21
          CALL[ ]	/* CallFunction */
          SFVFS[ ]	/* SetFVectorFromStack */
          PUSHB[ ]	/* 4 values pushed */
          23 25 48 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          24 25 48 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 4 values pushed */
          40 32 41 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 4 values pushed */
          52 25 48 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          53 25 48 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 4 values pushed */
          59 32 41 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 4 values pushed */
          67 32 41 19
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 3 values pushed */
          67 32 41
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SPVTL[0]	/* SetPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          59
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          40
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 3 values pushed */
          23 25 48
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          24
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          53
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          52
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          NPUSHB[ ]	/* 11 values pushed */
          25 32 40 41 48 52 53 59 67 23 24
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          NPUSHB[ ]	/* 12 values pushed */
          22 25 32 40 41 48 52 53 59 67 23 24
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          MDAP[0]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          64
          SMD[ ]	/* SetMinimumDistance */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 2 values pushed */
          65 34
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          PUSHB[ ]	/* 2 values pushed */
          27 30
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          50
          SRP1[ ]	/* SetRefPoint1 */
          PUSHB[ ]	/* 4 values pushed */
          6 20 0 38
          DEPTH[ ]	/* GetDepthStack */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          PUSHB[ ]	/* 1 value pushed */
          16
          SRP2[ ]	/* SetRefPoint2 */
          PUSHB[ ]	/* 2 values pushed */
          43 46
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHB[ ]	/* 2 values pushed */
          61 55
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          PUSHB[ ]	/* 2 values pushed */
          16 34
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>
  </glyf>
</ttFont>
